

  /*  private Boolean validateUsername() {
        String val = Uname.getEditText().getText().toString();
        String noWhiteSpace = "\\A\\w{4,20}\\z";

        if (val.isEmpty()) {
            Uname.setError("Field cannot be empty");
            return false;
        } else if (val.length() >= 15) {
            Uname.setError("Username too long");
            return false;
        } else if (!val.matches(noWhiteSpace)) {
           Uname.setError("White Spaces are not allowed");
            return false;
        } else {
            Uname.setError(null);
            Uname.setErrorEnabled(false);
            return true;
        }
    }*/



    private Boolean validatePhoneNo() {
        String val = nameET.getEditText().getText().toString();

        if (val.isEmpty()) {
            nameET.setError("Field cannot be empty");
            return false;
        } else {
            nameET.setError(null);
            nameET.setErrorEnabled(false);
            return true;
        }
    }
    private Boolean validatePassword() {
        String val = passwordET.getEditText().getText().toString();
        String passwordVal = "^" +
                //"(?=.*[0-9])" +         //at least 1 digit
                //"(?=.*[a-z])" +         //at least 1 lower case letter
                //"(?=.*[A-Z])" +         //at least 1 upper case letter
                "(?=.*[a-zA-Z])" +      //any letter
                "(?=.*[@#$%^&+=])" +    //at least 1 special character
                "(?=\\S+$)" +           //no white spaces
                ".{4,}" +               //at least 4 characters
                "$";

        if (val.isEmpty()) {
            passwordET.setError("Field cannot be empty");
            return false;
        } else if (!val.matches(passwordVal)) {
            passwordET.setError("Password is too weak You can Use @#$%*& To Make Strong");
            return false;
        } else {
            passwordET.setError(null);
            passwordET.setErrorEnabled(false);
            return true;
        }
    }
